name: Release

# Grant GITHUB_TOKEN permission to create tags & releases
permissions:
  contents: write

on:
  push:
    branches:
      - main
    paths:
      - 'VERSION'
      - '.github/workflows/release.yml'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version
        id: get_version
        run: |
          version=$(<VERSION)
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cross-compilation tools
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build Linux x64
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          mkdir -p build/linux-x64
          cp target/x86_64-unknown-linux-gnu/release/realm build/linux-x64/

      - name: Build Linux ARM64
        run: |
          cross build --release --target aarch64-unknown-linux-gnu
          mkdir -p build/linux-arm64
          cp target/aarch64-unknown-linux-gnu/release/realm build/linux-arm64/

      - name: Build macOS x64
        run: |
          rustup target add x86_64-apple-darwin
          cross build --release --target x86_64-apple-darwin
          mkdir -p build/darwin-x64
          cp target/x86_64-apple-darwin/release/realm build/darwin-x64/

      - name: Build macOS ARM64
        run: |
          rustup target add aarch64-apple-darwin
          cross build --release --target aarch64-apple-darwin
          mkdir -p build/darwin-arm64
          cp target/aarch64-apple-darwin/release/realm build/darwin-arm64/

      - name: Build Windows x64
        run: |
          cross build --release --target x86_64-pc-windows-msvc
          mkdir -p build/windows-x64
          cp target/x86_64-pc-windows-msvc/release/realm.exe build/windows-x64/

      - name: Fix file permissions
        run: |
          chmod +r build/linux-x64/realm
          chmod +r build/linux-arm64/realm
          chmod +r build/darwin-x64/realm
          chmod +r build/darwin-arm64/realm
          chmod +r build/windows-x64/realm.exe

      - name: Package Linux x64
        run: |
          tar -czvf realm-${{ steps.get_version.outputs.version }}-linux-x64.tar.gz \
            -C build/linux-x64 realm

      - name: Package Linux ARM64
        run: |
          tar -czvf realm-${{ steps.get_version.outputs.version }}-linux-arm64.tar.gz \
            -C build/linux-arm64 realm

      - name: Package macOS x64
        run: |
          tar -czvf realm-${{ steps.get_version.outputs.version }}-darwin-x64.tar.gz \
            -C build/darwin-x64 realm

      - name: Package macOS ARM64
        run: |
          tar -czvf realm-${{ steps.get_version.outputs.version }}-darwin-arm64.tar.gz \
            -C build/darwin-arm64 realm

      - name: Package Windows x64
        run: |
          zip -j realm-${{ steps.get_version.outputs.version }}-windows-x64.zip \
            build/windows-x64/realm.exe

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: v${{ steps.get_version.outputs.version }}
          files: |
            realm-${{ steps.get_version.outputs.version }}-linux-x64.tar.gz
            realm-${{ steps.get_version.outputs.version }}-linux-arm64.tar.gz
            realm-${{ steps.get_version.outputs.version }}-darwin-x64.tar.gz
            realm-${{ steps.get_version.outputs.version }}-darwin-arm64.tar.gz
            realm-${{ steps.get_version.outputs.version }}-windows-x64.zip
            install.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

